(defwidget bar [screen]
  (centerbox :orientation "v"
             :class "bar"
    (box :class "segment-top"
         :valign "start"
      (top))
    (box :valign "center"
         :class "middle" 
      (middle :screen screen))
    (box :valign "end"
         :class "segment-bottom" 
      (bottom :screen screen))))

(defwidget top []
  (workspaces_bspwm))


(defwidget workspaces_bspwm []
  (box :valign "center"
    (literal :content workspace)))

(deflisten workspace './bspwm_workspaces.sh subscribe "◆" "◇"')

(defwidget middle [] 
  (box :orientation "v"
       :valign "end"
       :space-evenly true
       :spacing "5"
    (time)
    day_word
    (date)))

(defwidget time []
  (box :orientation "v" 
       :class "time"
    hour min sec))


(defwidget metric [icon ?font-size]
  (box :class "metric" 
       :orientation "v"
    (label :class "metric-icon" 
           :style {font-size != "" ? "font-size: ${font-size}rem;" : ""} 
           :text icon)
    (children)))

(defwidget bottom [screen] 
  (box :orientation "v"
       :valign "end"
       :space-evenly true
       :spacing "5"


    (wifi)
    (volume)


    (metric :icon " " 
            :font-size 0.8
       brightness)

    ; (metric :icon "" 
    ;         :font-size 0.8
    ;    "${round(EWW_RAM.used_mem_perc, 0)}%")

    ; (metric :icon "" 
    ;         :font-size 1
    ;    "${round(EWW_CPU.avg, 0)}%")

    (metric :icon " " 
            :font-size 0.6
       "${bat-val}%")
    ))

(defwidget wifi []
  (box :class "metric" 
       :orientation "v"
       wifi-val))

(defpoll wifi-val :interval "2s" "./wifi.sh icon")
(defpoll bat-val :interval "10s" "./battery.sh level")

; TODO make this not cringe and not poll brightness
(deflisten brightness 
  "./brightness.sh percent")

(defwidget volume []
  (box :class "volume-metric"
       :orientation "v"
       :space-evenly false
       :valign "fill"
       :vexpand false
    (scale :orientation "h" 
           :min 0
           :max 100 
           :onchange "pamixer --set-volume $(echo {} | sed 's/\\..*//g')"
           :value volume)
    (eventbox :onscroll "if [ '{}' == 'up' ]; then pamixer -i 5; else pamixer -d 5; fi"
              :vexpand true
              :valign "fill"
      (box :orientation "v"
           :valign "fill"
           :vexpand true
        (button :onclick "./audio.sh toggle"
          (label :style "font-size: 1.2em;" 
                 :text audio_sink))
        (button :onclick "pavucontrol &"
          "${volume}%")))))




(defwidget large-sym [sym]
  (label :class "metric-icon large-symbol" :text sym))

(defwidget date []
  (box :orientation "v" 
       :halign "center" 
    month day year))

; TODO make this not hacky
(defvar audio_sink "墳")

(deflisten volume :initial "0" "./audio.sh volume")

(deflisten music_data 
  :initial `{"status": ""}`
  `
  playerctl          metadata --format '{ "status": "{{status}}", "artist": "{{artist}}", "title": "{{title}}"}' || echo '{"status": ""}';
  # playerctl --follow metadata --format '{ "status": "{{status}}", "artist": "{{artist}}", "title": "{{title}}"}'
  `)

(defpoll hour :interval "1s" "date +%I")
(defpoll min  :interval "1s" "date +%M")
(defpoll sec  :interval "1s" "date +%S")

(defpoll day_word :interval "10m" "date +%a | tr [:upper:] [:lower:]")
(defpoll day      :interval "10m" "date +%d")
(defpoll month    :interval "1h"  "date +%m")
(defpoll year     :interval "1h"  "date +%y")

(defvar workspaces_1_yuck "")
(defvar workspaces_2_yuck "")


(defwindow bar
  :monitor 0
  :geometry (geometry :x 0 
                      :y 0 
                      :width "72px" 
                      :height "100%"
                      :anchor "top right")
  :stacking "bg"
  :reserve (struts :distance "75" :side "right")
  :wm-ignore false
  :windowtype: "dock"
  (bar :screen 1))
